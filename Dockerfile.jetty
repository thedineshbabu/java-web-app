# Java SAML SSO Sample Application Dockerfile with Jetty
# Multi-stage build for optimized image size

# Stage 1: Build the application
FROM maven:3.8.6-openjdk-8 AS builder

# Set working directory
WORKDIR /app

# Copy Maven configuration files
COPY pom.xml .

# Download dependencies (cached layer)
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN mvn clean package -DskipTests

# Extract WAR file for manual deployment to a clean directory
RUN mkdir -p /tmp/war-extracted && \
    cd /tmp/war-extracted && \
    jar -xf /app/target/java-saml-sso.war

# Stage 2: Runtime with Jetty
FROM jetty:9.4-jdk8

# Set metadata
LABEL maintainer="SAML SSO Sample App"
LABEL description="Java SAML SSO Sample Application with Jetty"
LABEL version="1.0.0"

# Install additional packages for debugging and utilities (run as root)
USER root
RUN apt-get update && apt-get install -y \
    curl \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /var/lib/jetty

# Copy the extracted WAR contents from builder stage
COPY --from=builder /tmp/war-extracted/ webapps/java-saml-sso/

# Create necessary directories and set permissions
RUN mkdir -p logs && \
    mkdir -p /opt/saml-app/logs && \
    chown -R jetty:jetty logs && \
    chown -R jetty:jetty /opt/saml-app && \
    chown -R jetty:jetty webapps

# Copy custom Jetty configuration
COPY docker/jetty.xml /var/lib/jetty/etc/

# Switch to jetty user (as expected by the base image)
USER jetty

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/java-saml-sso/ || exit 1

# Start Jetty
CMD ["java", "-jar", "/usr/local/jetty/start.jar"] 